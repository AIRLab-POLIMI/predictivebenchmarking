<launch>
	<!-- This file launches:
	 	* Stage 
	 	* nav2d 
	 		-Operator
	 		-Navigator 
	 		-GetMap 
	 		-Explore 
	 		-SetGoal
	 		-joystick
	 		-Remote
	 		-exploration
	 	* rosbag record to record the /base_pose_ground_truth topic in a bag file
	 	* tf listener to write the gmapping tf
	 	* gmapping
	 	* RVIZ
	 	Params:
	 		-worldfile: the world file for stage
	 		-bag: the name of the bag file to write the ground truth from stage
	 		-output: the name of the file to write the gmapping log
	 	 -->

	<!-- Some general parameters -->
	<param name="use_sim_time" value="true" />
	<rosparam file="$(find nav2d_tutorials)/param/ros.yaml"/>

	<!-- Start Stage simulator with a given environment -->
	<node name="Stage" pkg="stage_ros" type="stageros" args="/$(arg worldfile)">
		<param name="base_watchdog_timeout" value="0" />
	</node>

	<!-- Start the Operator to control the simulated robot -->
	<node name="Operator" pkg="nav2d_operator" type="operator" >
		<remap from="scan" to="base_scan"/>
		<rosparam file="nav2d/operator.yaml"/>
		<rosparam file="nav2d/costmap.yaml" ns="local_map" />
	</node>

	<!-- Record ground truth values -->
	<node name="recorder" pkg="rosbag" type="record" args="-O $(arg bag) /base_pose_ground_truth"/> 

	<!-- Write log odom gmapping for metricevaluator -->
	<node name="listener" pkg="tf_listener" type="tf_listener.py" args="$(arg output)" />

	<!-- Start Mapper to generate map from laser scans -->
	<node name="Mapper" pkg="gmapping" type="slam_gmapping" args="_xmin:=-100 _ymin:=-100 _ymax:=100 _xmax:=100 _ogain:=3.0 _angularUpdate:=0.5 _linearUpdate:=0.5 _map_update_interval:=5.0 _odom_frame:=odom _particles:=30 scan:=base_scan"/>

	<!-- Start the Navigator to move the robot autonomously -->
	<node name="Navigator" pkg="nav2d_navigator" type="navigator">
		<rosparam file="nav2d/navigator.yaml"/>
	</node>

	<node name="GetMap" pkg="nav2d_navigator" type="get_map_client" />
	<node name="Explore" pkg="nav2d_navigator" type="explore_client" />
	<node name="SetGoal" pkg="nav2d_navigator" type="set_goal_client" />

	<!-- Start the joystick-driver and remote-controller for operation-->
	<node name="Joystick" pkg="joy" type="joy_node" />
	<node name="Remote" pkg="nav2d_remote" type="remote_joy" />

	<!-- RVIZ to view the visualization -->
	<node name="RVIZ" pkg="rviz" type="rviz" args=" -d $(find nav2d_tutorials)/param/tutorial3.rviz" />

	<!-- Start exploration of ambient -->
	<node name="exploration" pkg="start_exploration" type="startexploration.py" />
</launch>
